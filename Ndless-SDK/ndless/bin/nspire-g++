#!/bin/sh
# Caution, must be kept compatible with dash used by some Linux distros.

UNAME=`uname -s | tr '[A-Z]' '[a-z]'`
DIRNAME=`dirname "$0"`
# DIRNAME may not be in the toolchain directory if this script was symlinked.
# try to find the symlink target
which readlink >/dev/null 2>&1 && readlink "$0" >/dev/null 2>&1 && {
    SYMLINK=`readlink "$0"`
    
    # On MacOS X, the readlink command hasn't the same behavior than the others operating systems based on Unix.
    if [ "$UNAME" == "darwin" ]; then
    	DIRNAME=`dirname "$SYMLINK"`
    else
    	DIRNAME="$SYMLINK"/..
    fi
}

if [ "$UNAME" = "cygwin" ]; then
	DIRNAME=`cygpath --path --windows "$DIRNAME"`
fi

GCC=`(which arm-elf-g++ arm-none-eabi-g++ arm-linux-gnueabi-g++ | head -1) 2>/dev/null`
home="${USERPROFILE:-$HOME}"
mkdir -p "$home/.ndless/include"
# -fno-builtin: We prefer to use syscalls. And GCC's builtins expansion (http://www.ciselant.de/projects/gcc_printf/gcc_printf.html)
# is incompatible with the inline definition of most syscalls.
"$GCC" -mcpu=arm926ej-s -I "$home/.ndless/include" -I "$DIRNAME/../include" -fpic -fno-builtin -fno-exceptions -fno-rtti -D _TINSPIRE "$@"
